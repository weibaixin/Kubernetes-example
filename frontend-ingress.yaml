#  kubernetes-example git:(main) ✗ kubectl get ingress frontend-ingress -n example -o yaml
#  通过如上命令获得 frontend -ingress.yaml 文件，  manifest 文件
#  获取此文件的目的：学习 ingress 的路由策略的写法  paths 部分 2组策略 
#  k8s 集群的业务服务暴露外网访问 有2种 形式 即 service 的 type （nodePort，loadBalancer），其中 ingress 的 loadBalancer 属于最佳实践。
#  相关K8S 服务暴露的 内容，也去参照 云原生基础知识笔记 第 10讲，相关 type 的架构图 和解释也在其中。（service的IP 属于内部IP,外部无法访问）
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"networking.k8s.io/v1","kind":"Ingress","metadata":{"annotations":{"nginx.ingress.kubernetes.io/rewrite-target":"/$1"},"name":"frontend-ingress","namespace":"example"},"spec":{"ingressClassName":"nginx","rules":[{"http":{"paths":[{"backend":{"service":{"name":"frontend-service","port":{"number":3000}}},"path":"/?(.*)","pathType":"Prefix"},{"backend":{"service":{"name":"backend-service","port":{"number":5000}}},"path":"/api/?(.*)","pathType":"Prefix"}]}}]}}
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  creationTimestamp: "2023-07-09T03:23:01Z"
  generation: 1
  name: frontend-ingress
  namespace: example
  resourceVersion: "2402"
  uid: ee24213c-69a4-429c-823e-b84b722c8ab7
spec:
  ingressClassName: 
  rules:
  - http:
      paths:                                 # ingress的路由策略数组 ，2组策略
      - backend:                             # 策略1：当URL包含 / 前缀匹配时，将请求转发到backend 字段配置的服务中，即frontend-service 的3000端口
          service:
            name: frontend-service
            port:
              number: 3000
        path: /?(.*)
        pathType: Prefix
      - backend:                             # 策略2： 当URL包含 /api前缀匹配时，请求转发到backend-service 的5000端口上。      
          service:
            name: backend-service
            port:
              number: 5000                   # ingress指定的service端口号是service对象的port 字段，具体见frontend-serivce内容。
        path: /api/?(.*)
        pathType: Prefix
status:
  loadBalancer:
    ingress:
    - hostname: localhost